

-- Create Cloud9
    -- name: KubernitesProject

-- ssh-keygen -t rsa
    -- cat /home/ec2-user/.ssh/id_rsa.pub
    -- add public key to Setting SSH FROM Github
    -- git clone https://github.com/nguyenhuudamm/KubenetesProject.git

-- Create 1 repositry from [Elastic Container Registry] to push Image of Docker
-- Create 1 IAM
    -- aws configure in Cloud9
    -- popup [cancel -> BTN_Left]

-- Create env KubenetesProject
    -- sudo apt install python3-venv
    -- python3 -m venv ~/.KubenetesProject
    -- source  ~/.KubenetesProject/bin/activate         [login]
    -- deactivate                       [out]
    -- [CHECK][required Makefile]
        -- make install
        -- make lint

-- Install Kubernetes
    -- curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    -- which kubectl
    -- sudo mv kubectl /usr/local/bin/
    -- chmod +x /usr/local/bin/kubectl
    -- [CHECK]
        -- kubectl version --client
        -- kubectl version

-- Install eksctl
    -- curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
    -- sudo mv /tmp/eksctl /usr/local/bin
    -- [CHECK]
        -- eksctl version

-- Install hadolint
    -- sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
    -- sudo chmod +x /bin/hadolint

    -- [CHECK]
        -- hadolint Dockerfile

-- Install Make
    -- sudo apt install make
    -- sudo apt install make-guile

-- Run docker
    - docker build --tag=app .
    - docker image ls
    - docker run -it app bash
        - ls
        - python app.py
        - exit

-- Install python3.7.9
    -- sudo apt update
    -- sudo apt install software-properties-common
    -- sudo add-apt-repository ppa:deadsnakes/ppa
    -- sudo apt update
    -- sudo apt install python3.9
    -- python3.9 --version

    -- set mặc định là python3.9
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1

-- Thiết lập circle
    -- curl -fLSs https://circle.ci/cli | bash
    -- sudo !!
    -- cd /tmp
    -- wget https://github.com/CircleCI-Public/circleci-cli/releases/download/v0.1.28995/circleci-cli_0.1.28995_linux_amd64.tar.gz
    -- tar zxvf circleci-cli_0.1.28995_linux_amd64.tar.gz
    -- cd circleci-cli_0.1.28995_linux_amd64
    -- mv circleci ~/KubenetesProject
    -- [CHECK]
        -- ./circleci
        -- make validate-circleci


-- cài đặt eksctl
EKSCTL đơn giản hóa đáng kể việc tạo cụm EKS bằng cách tự động tạo các tài nguyên AWS cần thiết trong khu vực mặc định của bạn, chẳng hạn như:

VPC - mạng ảo được xác định bởi một dải địa chỉ IP được phân bổ cho bạn.
Mạng con - mạng con là tập hợp con của VPC (địa chỉ IP) trong vùng sẵn sàng mong muốn của bạn (trung tâm dữ liệu)
Nhóm nút - nhóm logic của các nút công nhân. Lưu ý rằng mỗi nút là một Máy ảo (VM)
Quyết định AMI và Loại nút công nhân. AMI xác định hệ điều hành cơ bản, mặc định là Linux với các gói hỗ trợ. Loại xác định dung lượng phần cứng.
Điểm cuối API Kubernetes

    -- cài đặt
        curl -LO "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz"
        tar xzf eksctl_$(uname -s)_amd64.tar.gz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        sudo chown -R $(whoami) /usr/local/<directory_name>

        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client


    -- các lệnh
        -- create
            eksctl create cluster --config-file=<path>
            eksctl create cluster --name myCluster --nodes=4
        -- get
            eksctl get cluster --name=kubernetesproject --region=us-east-1
        -- delete
            eksctl delete cluster --name=<name> [--region=<region>]


-- [ERROR]
    -- Error:   error starting container python:3.7.9: Error response from daemon: --storage-opt is supported only for overlay over xfs with 'pquota' mount option
        -- When run [./circleci local execute -c .circleci/config.yml build] in Makefile
        -- Fix:
            -- sudo nano /etc/default/grub
                -- add [rootflags=pquota,uquota]
            -- sudo grub2-mkconfig -o /boot/grub2/grub.cfg
            -- reboot


            sudo apt install python3-pip
            pip install --upgrade awscli
            curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update
            aws --version


            #create:  
                eksctl create cluster --name kubernetesproject --region=us-east-1
            #cleanup: 
                eksctl delete cluster --region=us-east-1 --name=kubernetesproject

            


            -- danh sách namespaces
            kubectl get namespaces
            -- nếu kubectl get pods -> "No resources found"  -> có thể đang set namespaces [default]
            -- set đến namespaces khác
            kubectl config set-context --current --namespace=<my-kube-system>



            sudo yum update
            sudo yum install -y curl yum-utils device-mapper-persistent-data lvm2
            sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            sudo yum install docker-ce docker-ce-cli containerd.io
            sudo yum-config-manager --save --setopt=docker-ce-stable.skip_if_unavailable=true
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo docker --version







